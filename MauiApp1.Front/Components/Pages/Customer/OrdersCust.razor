@page "/ordercust"
@using MauiApp1.DbApp.Models
@using MauiApp1.Front.Services.Jwt
@layout CustomerLayout
@inject IOrderRepository OrderRepository
@inject IJwtTokenService JwtTokenService

<div class="container mt-4">
    <h2 class="mb-4">Мои Заказы</h2>
    @if (isLoading)
    {
            <div class="text-center">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Загрузка...</span>
                </div>
            </div>
    }
    else if (orders == null || orders.Count == 0)
    {
            <div class="alert alert-info">
                У вас пока нет заказов.
            </div>
    }
    else
    {
            <table class="table table-striped table-hover">
                <thead class="table-light">
                    <tr>
                        <th>Дата заказа</th>
                        <th>Товар</th>
                        <th>Количество</th>
                        <th>Итоговая стоимость</th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var order in orders)
                {
                            <tr>
                                <td>@order.OrderDate.ToString("dd.MM.yyyy HH:mm")</td>
                                <td>@order.Product.Name</td>
                                <td>@order.Quantity</td>
                                <td>@order.TotalPrice.ToString("C")</td>
                            </tr>
                }
                </tbody>
            </table>
    }
</div>

@code {
    private List<OrderEntity> orders = new List<OrderEntity>();
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var userId = Guid.Parse(JwtTokenService.ReadToken());
            orders = await OrderRepository.GetOrdersByCustomerIdAsync(userId) as List<OrderEntity> ?? new List<OrderEntity>();
        }
        catch (Exception ex)
        {
            // TODO: Implement proper error handling
            Console.WriteLine($"Ошибка загрузки заказов: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }
}