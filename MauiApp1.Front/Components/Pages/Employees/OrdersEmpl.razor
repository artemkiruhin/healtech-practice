@page "/orderempl"
@layout EmployeeLayout
@using AutoMapper
@using MauiApp1.DbApp.Models
@using MauiApp1.DbApp.Models.Dtos
@using MauiApp1.Front.Services.Jwt
@inject IOrderRepository OrderRepository
@inject IMapper Mapper

<div class="container mt-4">
    <h2 class="mb-4">All Orders</h2>

    @if (isLoading)
    {
        <div class="spinner-border" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    }
    else if (orders == null || orders.Count == 0)
    {
        <div class="alert alert-info">
            No orders found.
        </div>
    }
    else
    {
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Order ID</th>
                    <th>Order Date</th>
                    <th>Customer</th>
                    <th>Product</th>
                    <th>Quantity</th>
                    <th>Total Price</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in orders)
                {
                    <tr>
                        <td>@order.Id</td>
                        <td>@order.OrderDate.ToString("dd.MM.yyyy HH:mm")</td>
                        <td>@order.CustomerId</td>
                        <td>@order.ProductId</td>
                        <td>@order.Quantity</td>
                        <td>@order.TotalPrice.ToString("C")</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    private List<OrderDto> orders = new List<OrderDto>();
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var ord = await OrderRepository.GetAllAsync();
            orders = ord.Select(x => Mapper.Map<OrderDto>(x)).ToList();
            isLoading = false;
        }
        catch (Exception ex)
        {
            // Consider adding error logging or displaying an error message
            Console.WriteLine($"Error loading orders: {ex.Message}");
            isLoading = false;
        }
    }
}