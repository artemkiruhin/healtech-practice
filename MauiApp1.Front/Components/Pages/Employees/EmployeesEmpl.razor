@page "/emplempl"
@layout EmployeeLayout

@using AutoMapper
@using MauiApp1.DbApp.Models
@using MauiApp1.DbApp.Models.Dtos
@using MauiApp1.Front.Services.Jwt
@inject IUserRepository UserRepository
@inject IMapper Mapper

<div class="container mt-4">
    <h2 class="mb-4">Сотрудники</h2>

    @if (isLoading)
    {
        <div class="spinner-border" role="status">
            <span class="sr-only">Загрузка...</span>
        </div>
    }
    else if (employees == null || employees.Count == 0)
    {
        <div class="alert alert-info">
            No orders found.
        </div>
    }
    else
    {
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Имя</th>
                    <th>Имя пользователя</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var employee in employees)
                {
                    <tr>
                        <td>@employee.Id</td>
                        <td>@employee.Name</td>
                        <td>@employee.Username</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    private List<UserDto> employees = new List<UserDto>();
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var empl = await UserRepository.GetAllAsync();
            employees = empl.Where(x => x.Role == "Employee").Select(x => Mapper.Map<UserDto>(x)).ToList();
            isLoading = false;
        }
        catch (Exception ex)
        {
            // Consider adding error logging or displaying an error message
            Console.WriteLine($"Error loading orders: {ex.Message}");
            isLoading = false;
        }
    }
}